package edu.sru.dsm1015.TrafficSim.gui;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Rectangle;

import javax.swing.JButton;
import javax.swing.JPanel;

import edu.sru.dsm1015.TrafficSim.grid.Coordinate;

public class Circle extends JPanel {
	
	private static final int STEPS = 5;
	private int radius;
	private Color color;
	private Coordinate coordinates;
	private Rectangle bounds;
	private String label; //citizen number
	
	public Circle(Coordinate coordinates, JButton button, String label) {
		setOpaque(false); // make the background transparent
		setVisible(true);
		this.bounds = button.getBounds();
		setBounds(this.bounds); // 100 by 100 px
		this.radius = 15;
		this.color = Color.PINK;
		this.coordinates = coordinates;
		this.label = label;
	}
	
	
	//custom color
	public Circle(Coordinate coordinates, JButton button, String label, Color color) {
		setOpaque(false); // make the background transparent
		setVisible(true);
		this.bounds = button.getBounds();
		setBounds(this.bounds); // 100 by 100 px
		this.radius = 10;
		this.color = color;
		this.coordinates = coordinates;
		this.label = label;
	}
	
	
	//step towards point. return Coordinate of new position.
    public Coordinate step(Coordinate start, Coordinate point) {
    	
    	if(coordinates.equals(point)) {
    		return this.coordinates;
    	}
    	
        int deltaX = (point.getX() - start.getX()) / STEPS; // distance to move in x-direction per step
        int deltaY = (point.getY() - start.getY()) / STEPS; // distance to move in y-direction per step
        
    	int newX = coordinates.getX() + deltaX;
    	int newY = coordinates.getY() + deltaY;
    	setCoordinates(newX, newY);
    	System.out.println("moving " + deltaX + " " + deltaY + " NewPositon: " + coordinates + " Goal: " + point);
    	repaint();
    	return null;
    	
    }
	
	public float getRadius() {
		return this.radius;
	}
	
	public void setCoordinates(int X, int Y) {
		Coordinate tempCoor = new Coordinate(X, Y);
		this.coordinates = tempCoor;
	}
	
	public Coordinate getCoordinates() {
		return this.coordinates;
	}
	
	@Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        // Draw the circle
        g.setColor(color);
        int x = coordinates.getX() - radius / 2;
        int y = coordinates.getY() - radius / 2;
        g.fillOval(x, y, radius, radius);
        
        // Draw the label
        g.setColor(Color.BLACK);
        g.setFont(new Font("Arial", Font.BOLD, 12));
        g.drawString(label, (getWidth() - g.getFontMetrics().stringWidth(label)) / 2, (getHeight() + g.getFontMetrics().getHeight() / 2) / 2);
    }
	
}
